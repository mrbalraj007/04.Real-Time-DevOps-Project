// JENKINS CI PIPELINE/
// Purpose: The Code will be built into executable file (.jar) & pushed to Dockerhub
// NOTE:
//  i. Store Dockerhub, EC2 pem key credentials in Jenkins Server
// ii. Install 'ssh agent' plugin in Jenkins

pipeline {
    agent any
    // DECLARE THE VARIABLES HERE:
    environment {
        DOCKER_USERNAME = "balrajsi"     // check the 'ID' in your Jenkins credentials
    }

    stages {
        stage("1. Cleanup") {
            // Clean workspace directory for the current build
            steps {
                deleteDir ()             
            }
        }

        stage ('2. Git Checkout') {
            // use pipeline syntax generator to generate below step
            // 'Pipeline syntax' --> Steps 'Smaple step' --> git (enter url & branch & generate)
            steps {
                script {
                    git branch: 'main', credentialsId: 'my_github_creds', url: 'https://github.com/mrbalraj007/04.Real-Time-DevOps-Project.git'
                  }
                
            }
        }
        
        stage("3. Maven Unit Test") {  
            // Test the individual units of code 
            steps{
                sh 'mvn test'        
                
            }
        }
        
        stage('4. Maven Build') {
            // Build the application into an executable file (.jar)
            steps{
                sh 'mvn clean install'   
            }
        }
        
        stage("5. Maven Integration Test") {
            //  Test the interaction between different units of code
            steps{
                
                  sh 'mvn verify'          
            }
        }
        stage('6. Docker Image Build') {
            // Build Docker Image 
            steps{
                script {
                      def JOB = env.JOB_NAME.toLowerCase()           // Convert Jenkins Job name to lower-case
                      sh "docker build -t ${JOB}:${BUILD_NUMBER} ."  // 'JOB_NAME' & 'BUILD_NUMBER' are Jenkins Global variable
                    }
                }
            }
           stage('7. Docker Image Tag') {
            // Rename the Docker Image before pushing to Dockerhub
            steps{
                script {
                    def JOB = env.JOB_NAME.toLowerCase() // Convert Jenkins Job name to lower-case
                    sh "docker tag ${JOB}:${BUILD_NUMBER} ${DOCKER_USERNAME}/${JOB}:v${BUILD_NUMBER}"
                    sh "docker tag ${JOB}:${BUILD_NUMBER} ${DOCKER_USERNAME}/${JOB}:latest"
                  }
                }
            } 
        
        }
    }
